# manifests/cassandra/lua-services/templates/externalSecrets.yaml
{{- $selected := .Values.subchart | default "" }}
{{- range $chartName, $chart := .Subcharts }}
  {{- if or (eq $selected "") (eq $chartName $selected) }}
    {{- if .Values.config.external_secret.keys }}
      {{- $appName := $chartName | replace "isg-omcom-cassandra-lua-services-" "" }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $appName }} # Name the ExternalSecret after the app
  namespace: {{ $.Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ $appName }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app: {{ $appName }}
  {{- with $.Values.externalSecret.annotations }} # Use subchart's annotations, fallback to parent's
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  refreshInterval: {{ $.Values.externalSecret.refreshInterval | quote }} # Use subchart's interval, fallback, ensure string
  secretStoreRef:
    name: {{ $.Values.externalSecret.secretStoreRef.name }} # Subchart's ref, fallback to parent
    kind: {{ $.Values.externalSecret.secretStoreRef.kind }} # Subchart's ref, fallback to parent
  target:
    name: {{ $appName }}-secret
    template:
      data:
        secrets.lua: |
          local cjson = require "cjson.safe"
          local secrets = [[
          {
            {{- include "external.secret.template" $chart -}}
          }
          ]]
          return setmetatable({}, {
              __index = cjson.decode(secrets),
          })
  data:
    {{- range $_, $item := $.Values.externalSecret.data }} # <--- CORRECT ITERATION: $_ for index, $item for the actual object
    - secretKey: {{ $item.secretKey | quote }} # <--- Access secretKey from $item, ensure it's quoted as string
      remoteRef:
        key: {{ $item.remoteRef.key | quote }} # <--- Access key from $item.remoteRef, ensure it's quoted as string
        property: {{ $item.remoteRef.property | default $item.secretKey | quote }} # <--- Access property from $item.remoteRef, default to $item.secretKey, ensure quoted
    {{- end }}
    {{- end }} # End of if $chart.Values.externalSecret
  {{- end }}
{{- end }}
