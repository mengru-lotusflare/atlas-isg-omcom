{{- $appName := include "app.fullname" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $appName }}
  annotations:
    {{- toYaml $.Values.annotations | nindent 4 }}
  labels:
    {{- include "app.labels" $ | nindent 4 }}
    app: {{ $appName }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  {{- with $.Values.imagePullSecrets }}
    imagePullSecrets:
      {{- toYaml . | nindent 8 }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ $appName }}
  template:
    metadata:
      labels:
        app: {{ $appName }}
        {{- include "app.tag" $ | nindent 8 }}
      annotations:
        {{- include "app.repoLabel" $ | nindent 8 }}
        checksum/configmap: {{ include (print $.Template.BasePath "/cluster-configmap.yaml") $ | sha256sum | quote }}
        checksum/staticjobs: {{ .Values.application.jobs | toJson | sha256sum | quote }}
{{- range $key, $value := (merge $.Values.podAnnotations $.Values.serviceAccount.annotations) }}
        {{ $key }}: {{ $value | quote }}
{{- end }}
    spec:
    {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml $ | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "app.serviceAccountName" $ }}
      terminationGracePeriodSeconds: {{ $.Values.terminationGracePeriodSeconds }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $appName }}
          securityContext:
            {{- toYaml .Values.application.securityContext | nindent 12 }}
          image: "{{ .Values.application.image.repository }}/{{ .Values.application.image.overrides.imageName | default .Values.application.name }}:{{ .Values.application.image.tag }}"
          imagePullPolicy: {{ .Values.application.image.pullPolicy }}
          env:
            - name: K8S_POD_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          {{- if .Values.application.env }}
          {{- toYaml .Values.application.env | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.application.resources | nindent 12 }}
          {{- if .Values.application.command }}
          command:
            {{- toYaml .Values.application.command | nindent 12 }}
          {{- else }}
          command: [ "/launcher" ]
          {{- end }}
          {{- if .Values.application.args }}
          args:
            {{- toYaml .Values.application.args | nindent 12 }}
          {{- end }}
          {{- if .Values.application.livenessProbe }}
          livenessProbe:
          {{- toYaml .Values.application.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.application.readinessProbe }}
          readinessProbe:
          {{- toYaml .Values.application.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.application.startupProbe }}
          startupProbe:
          {{- toYaml .Values.application.startupProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.application.service.enabled }}
          ports:
            - name: {{ .Values.application.service.portName }}
              containerPort: {{ .Values.application.service.targetPort }}
              protocol: {{ .Values.application.service.protocol | upper }}
          {{- end }}
          volumeMounts:
            - name: heap-dumps
              mountPath: /dump
            - name: tmp
              mountPath: /tmp
            - name: logs
              mountPath: /logs
            - name: config
              mountPath: "/app/application.conf"
              subPath: application_config.json
            - name: default-config
              mountPath: "/app/static_jobs.json"
              subPath: static_jobs.json
            {{- if .Values.application.dependencies.logstash.enabled }}
            - name: config
              mountPath: "/app/logback.xml"
              subPath: logback.xml
            {{- end }}
            - name: config
              mountPath: "/launcher-config.yaml"
              subPath: launcher_config.yaml
            - name: data
              mountPath: /mnt
            {{- range $index, $mountProperties := .Values.application.additionalMounts }}
            - name: {{ $mountProperties.name }}
              mountPath: {{ $mountProperties.mountPath }}
              subPath: {{ $mountProperties.subPath }}
            {{- end }}
            {{- if .Values.application.dependencies.externalSecret.enabled }}
            - name: external-secret-volume
              mountPath: /app/secrets.json
              subPath: secrets.json
              readOnly: true
            {{- end }}
      volumes:
        {{- if .Values.application.additionalVolumes }}
        {{- toYaml .Values.application.additionalVolumes | nindent 8  }}
        {{- end }}
        {{- if .Values.application.dependencies.externalSecret.enabled }}
        - name: external-secret-volume
          secret:
            secretName: {{ $appName }}-secret
        {{- end }}
        - name: heap-dumps
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: logs
          emptyDir: {}
        - name: config
          configMap:
            name: {{ $appName }}
        - name: default-config
          configMap:
            name: {{ $appName }}
        - name: data
          emptyDir: {}
